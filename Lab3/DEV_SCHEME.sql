CREATE TABLE users(
    person_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL
);

CREATE TABLE departments( 
  department_id number(10) NOT NULL PRIMARY KEY,
  department_name varchar2(50) NOT NULL
);

CREATE TABLE employees(
  employee_number number(10) NOT NULL PRIMARY KEY,
  employee_name varchar2(50) NOT NULL,
  department_id number(10),
  salary number(6),
  CONSTRAINT fk_departments
    FOREIGN KEY (department_id)
    REFERENCES departments(department_id)
);

ALTER TABLE departments
  ADD (departemnt_mystery varchar2(45),
       counter NUMBER);
       
CREATE TABLE test_constr(
    id number NOT NULL PRIMARY KEY,
     department_id number,
     CONSTRAINT fk_departments_tesest
    FOREIGN KEY (department_id)
    REFERENCES departments(department_id)
);

CREATE OR REPLACE PROCEDURE greetings 
AS 
BEGIN 
   dbms_output.put_line('Hello World!'); 
END; 

CREATE OR REPLACE PACKAGE emp_mgmt AS
    FUNCTION hire(last_name VARCHAR2, job_id VARCHAR2, manager_id NUMBER, 
    salary NUMBER, commission_pct NUMBER, department_id NUMBER) RETURN NUMBER;
    END emp_mgmt;

CREATE OR REPLACE PACKAGE BODY emp_mgmt AS empl_num NUMBER;
    FUNCTION hire(last_name VARCHAR2, job_id VARCHAR2, manager_id NUMBER, 
    salary NUMBER, commission_pct NUMBER, department_id NUMBER) RETURN NUMBER IS new_empl NUMBER;
    BEGIN
        return 13;
    END;
END emp_mgmt;

CREATE OR REPLACE FUNCTION find_sum(number_1 NUMBER, number_2 NUMBER) 
    RETURN NUMBER 
    IS
    sum_ NUMBER;
    BEGIN
        sum_ := number_1 + number_2;
        return sum_;
    END;
CREATE OR REPLACE FUNCTION find_sum_3(number_1 NUMBER, number_2 NUMBER, number_3 NUMBER) 
    RETURN NUMBER 
    IS
    sum_ NUMBER;
    BEGIN
        sum_ := number_1 + number_2 + number_3;
        return sum_;
    END;
CREATE TABLE my_tab(
name VARCHAR2(10)
);

CREATE TABLE a1(
    x number,
    y number
);
create index a3_index on a1(y);
create index a2_index on a1(x,y);
create index a1_index on a1(x);

create table n1(
    x number primary key,
     y number
);

ALTER TABLE n1
  ADD CONSTRAINT x1_ref_n1
    FOREIGN KEY (y)
    REFERENCES n2(x1);
  
create table n2(
    x1 number primary key,
    y1 number,
    z1 number,
    x1_ref number,
    CONSTRAINT x1_ref_name
    FOREIGN KEY (x1_ref)
    REFERENCES n1(x)
);